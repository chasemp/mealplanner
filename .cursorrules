# MealPlanner PWA - Cursor AI Rules

## Project Structure
- **Source:** `/src` - All source code (JS, CSS, HTML)
- **Static Assets:** `/public` - Icons, manifest, CNAME (copied as-is to build)
- **Build Output:** `/docs` - Generated by `npm run build` (GitHub Pages serves from here)

## Critical Rules

### 1. NEVER Edit /docs Directly
- `/docs` is AUTO-GENERATED by the build process
- Any manual edits to `/docs` will be OVERWRITTEN on next build
- Always edit source files in `/src` or `/public`

### 2. Deployment Pattern: /src → /docs
- We use the `/src` → `/docs` pattern for GitHub Pages deployment
- `npm run build` compiles `/src` and copies `/public` to `/docs`
- GitHub Pages serves from `/docs` directory automatically
- NO GitHub Actions needed - just push to main

### 3. Port Management
- **Dev Port:** 3004 (registered in PORT_REGISTRY.md)
- Use `npm run port` to check current port
- Use `npm run port:kill` if port conflicts occur
- Use `npm run port:force` to kill and restart

### 4. File Locations
- HTML: `/src/index.html`
- JavaScript modules: `/src/js/*.js`
- Components: `/src/components/*.js`
- Database: `/src/database/*.js`
- Utilities: `/src/utils/*.js`
- Styles: `/src/styles/*.css`
- Service Worker: `/src/sw.js`
- Manifest: `/public/manifest.json`
- CNAME: `/public/CNAME`

### 5. Development Workflow
```bash
npm run dev        # Start dev server on port 3004
npm run build      # Build to /docs
git add -A
git commit -m "feat: your changes"
git push origin main  # Deploys to mealplanner.523.life
```

### 6. Testing
- Unit tests: `npm test` or `npm run test:run`
- E2E tests: `npm run test:e2e`
- Core tests: `npm run test:core`
- All tests: `npm run test:all`
- Pre-commit hook runs critical regression tests automatically

### 7. Best Practices (from PWA guides)
- Follow patterns in `/peadoubleueh/project-docs/`
- Mobile-first design principles
- Touch + click event handling
- Page-based navigation over modals
- Conditional logging (Logger utility)
- Use Logger for all console output
- Use EventHelper for universal touch/click events

### 8. Database
- Uses SQL.js (SQLite in WebAssembly)
- Local-first storage
- Demo data system for testing
- Export/import functionality

## Testing
- **Local:** http://localhost:3004
- **Production:** https://mealplanner.523.life

## Port Conflicts?
```bash
npm run port:kill   # Kill process on port 3004
npm run port:force  # Kill and restart
```

## References
- Main PWA docs: `../peadoubleueh/project-docs/`
- Port registry: `../peadoubleueh/PORT_REGISTRY.md`
- Deployment guide: `../peadoubleueh/project-docs/DEPLOYMENT_ARCHITECTURE.md`
- Project docs: `./project-docs/` (testing, deployment, user manual)
